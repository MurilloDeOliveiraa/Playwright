# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
  - name: Environments
    type: string
    default: QA
    values:
      - QA
      - DEV
      - UAT
      - PROD

  - name: AllTests
    displayName: Run All Tests?
    type: boolean
    default: True    
      
variables:
- group: ENV_VARIABLES

trigger:
- master

stages:
  - stage: SETUP
    jobs:
    - job: SETUP
      workspace:
        clean: all
      steps:
      - bash: docker pull mcr.microsoft.com/playwright:v1.43.0-jammy
      displayName: Pull Playwright Image

  - stage: RUN_E2E_TESTS
    dependsOn: SETUP
    jobs:
    - job: A
      displayName: Build and Test
      timeoutInMinutes: 10
      pool:
        vmImage: ubuntu-latest

      steps:
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '16.x'
          checkLatest: true

      - ${{ if eq(parameters.AllTests, True) }}:
        - script: echo $(VALID_USERNAME_SAUCEDEMO) # runs when Boolean=true
        - script: echo $(VALID_PASSWORD_SAUCEDEMO) # runs when Boolean=true

      - script: |
          npm ci    
        displayName: 'npm install'

      - bash: |
          echo "Using the mapped env var for this task works and is recommended: $VALID_USERNAME"
          echo "Using the mapped env var for this task works and is recommended: $VALID_PASSWORD"
        env:
          VALID_USERNAME: $(VALID_USERNAME_SAUCEDEMO) # the recommended way to map to an env variable
          VALID_PASSWORD: $(VALID_PASSWORD_SAUCEDEMO)
        displayName: Set Environment Variables

      - bash: printenv
        displayName: Get Enviroment Variables

      - script: npx playwright install --with-deps chromium
        displayName: 'Install Playwright browsers'

      - script: npx playwright test --project=chromium    
        displayName: 'Run Tests'
        env:
          CI: 'true'
          VALID_USERNAME: '$(VALID_USERNAME_SAUCEDEMO)'
          VALID_PASSWORD: '$(VALID_PASSWORD_SAUCEDEMO)'
      
      - task: PublishTestResults@2
        displayName: 'Publish test results'
        inputs:
          searchFolder: 'test-results'
          testResultsFormat: 'JUnit'
          testResultsFiles: 'e2e-junit-results.xml'
          mergeTestResults: true
          failTaskOnFailedTests: true
          testRunTitle: 'My End-To-End Tests'
        condition: succeededOrFailed()
      - task: PublishPipelineArtifact@1
        inputs:
          artifact: playwright-report-test
          publishLocation: 'pipeline'
        condition: succeededOrFailed()

    - job: B
      displayName: Final Job
      timeoutInMinutes: 5  
      dependsOn: A
      steps:
      - script: echo FINAL JOB IS COMPLETED